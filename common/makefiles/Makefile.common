#################################
# Author: Sravanthi Kota Venkata
#################################

# Define MATLAB-PATH with the path to the MATLAB package
MATLAB_PATH = /pkg/bin/matlab
ifeq ($(filter matlab-run,$(MAKECMDGOALS)),matlab-run)
ifneq ($(wildcard $(MATLAB_PATH)),$(MATLAB_PATH))
$(error Please set the appropriate MATLAB path in MATLAB_PATH variable)
endif
endif

ifeq ($(filter mcc-run,$(MAKECMDGOALS)),mcc-run)
ifneq ($(wildcard $(MATLAB_PATH)),$(MATLAB_PATH))
$(error Please set the appropriate MATLAB path in MATLAB_PATH variable)
endif
endif

CC=gcc
override CFLAGS += -DGCC -DCHECK -D$(INPUT)

COMMON_DIR := $(TOP_DIR)/common/c
M_COMMON := $(TOP_DIR)/common/matlab
M_TOOLBOX=$(TOP_DIR)/common/toolbox
TIMING_DIR := $(TOP_DIR)/cycles/$(BMARK)
MTIMING_DIR := $(TOP_DIR)/cycles/$(BMARK)
BMARK_DIR := $(TOP_DIR)/benchmarks/$(BMARK)

#The options set below and specific to each benchmark. Disparity takes 2 input images, whereas Tracking can take any >1 input images =.

# Variables exported from the benchmark specific Makefiles:
# BMARK
# INPUT - sqcif/qcif/cif

# Matlab source, data and result directory

M_DIR=$(BMARK_DIR)/src/matlab
M_DATA=$(BMARK_DIR)/data/$(INPUT)
M_RESULT=$(BMARK_DIR)/result

# C source, data and result directory

C_DIR=$(BMARK_DIR)/src/c
DATA_DIR=$(BMARK_DIR)/data/$(INPUT)
C_RESULT=$(M_RESULT)

# CUDA stuff

CUDA_SRC_DIR=$(BMARK_DIR)/src/cuda
DATA_DIR=$(BMARK_DIR)/data/$(INPUT)
CUDA_RESULT=$(M_RESULT)

# Source files for C and Common folders

C_SRC := $(wildcard $(C_DIR)/*.c)
CUDA_C_SRC := $(wildcard $(CUDA_SRC_DIR)/*.c) 
CUDA_CU_SRC := $(wildcard $(CUDA_SRC_DIR)/*.cu) 
COMMON_SRC := $(wildcard $(COMMON_DIR)/*.c)
COMMON_CU_SRC := $(wildcard $(COMMON_DIR)/*.cu)

# RULES

EXE =
INCLUDES = -I$(COMMON_DIR) -I$(C_DIR)
CUDA_INCLUDES = -I$(COMMON_DIR) -I$(CUDA_SRC_DIR) -I$(CUDA_DIR)/include
COMPILE_C = $(CC) $(CFLAGS) -lm -O2 $(INCLUDES)
#COMPILE_C = $(CC) $(CFLAGS) -DGENERATE_OUTPUT -lm -O2 $(INCLUDES)
COMPILE_G = $(CC) $(CFLAGS) -g -lm $(INCLUDES)
COMPILE_PG = $(COMPILE_G) -pg

c-run: compile
	@echo -e "Data set\t\t- $(INPUT)" 
	@./$(BMARK)$(EXE) $(DATA_DIR) $(C_RESULT) | tee $(TIMING_DIR)/C_$(INPUT).txt

debug:
	@echo Running Debug C Version of the benchmark
	@$(COMPILE_G) $(COMMON_SRC) $(C_SRC) -o $(BMARK)$(EXE)
	@valgrind --leak-check=full ./$(BMARK)$(EXE) $(DATA_DIR) $(C_RESULT)
	#@gdb ./$(BMARK)$(EXE) $(DATA_DIR) $(C_RESULT)

profile: compile-prof
	@echo -e "Data set\t\t- $(INPUT)" 
	@./$(BMARK)$(EXE) $(DATA_DIR) $(C_RESULT)
	@gprof $(BMARK)$(EXE)
	
C_OBJS := $(COMMON_SRC:.c=.o) $(C_SRC:.c=.o)

compile: $(C_SRC)
	@echo 
	@echo -e "Benchmark\t\t- $(BMARK)"
	@$(COMPILE_C) $(COMMON_SRC) $(C_SRC) -o $(BMARK)$(EXE)

compile-prof: $(C_SRC)
	@echo 
	@echo -e "Benchmark\t\t- $(BMARK)"
	@$(COMPILE_PG) $(COMMON_SRC) $(C_SRC) -o $(BMARK)$(EXE)

matlab-run:
	@echo 
	@echo -e "Benchmark\t\t- $(BMARK)"
	@echo -e "Data set\t\t- $(INPUT)" 
	@cd $(M_DIR); $(MATLAB_PATH) -glnx86 -nosplash -nodisplay -r "script_run_profile('$(M_DATA)', '$(M_RESULT)', '$(INPUT)', '$(M_COMMON)', '$(M_TOOLBOX)'); quit" | tee $(MTIMING_DIR)/Matlab_$(INPUT).txt

mcc-run:
	@echo Generating a C standalone application
	cd $(M_DIR); $(MATLAB_PATH) -nosplash -nodesktop -r "mcc -m -v script_run_profile -d $(M_RESULT); quit"
	
#all: c-run matlab-run mcc-run cuda-run
all: c-run cudall

cudall: cuda-run cuda-cpu-run cuda-cpu-transfer-run

clean: cuclean
	@-rm $(BMARK)

include $(MAKEFILE_COMMON_DIR)/Makefile.cuda



